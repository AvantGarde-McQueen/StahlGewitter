economy_progress_calc = {
	### 代入
	add_to_variable = { economy_progress = economy_index }
	clamp_variable = {
		var = economy_progress
		max = global.economy_progress_width
		min = 0
	}

	#赤字分計算
	if = {
		limit = { NOT = { has_country_flag = disable_deficit } }

		set_temp_variable = { economy_deficit_gain = economy_index }
		multiply_temp_variable = { economy_deficit_gain = -1 }

		add_to_variable = { economy_deficit = economy_deficit_gain }
		clamp_variable = {
			var = economy_deficit
			max = economy_deficit_width
			min = 0
		}
	}
	
	###レベル増減チェック
	if = {
		limit = { check_variable = { economy_progress = global.economy_progress_width } }
		economy_level_up = yes
	}
	else_if = {
		limit = { check_variable = { economy_progress = 0 } }
		economy_level_down = yes
	}
}

economy_index_calc = {
	#				#
	# GOOD INDEX XD #
	#				#
	clear_variable = economy_good_index_temp
	### modifierヨリ [ x>=0, 丸める ]
	set_temp_variable = { economy_good_index_modifier = modifier@SG_good_economic_index_modifier }
	round_variable = economy_good_index_modifier

	### 総合計算 (正)
	add_to_variable = { economy_good_index_temp = economy_good_index_modifier }
	set_variable = { economy_good_index = economy_good_index_temp }
	
	#				#
	# BAD INDEX X(  #
	#				#
	clear_variable = economy_bad_index_temp

	###軍事費ヨリ
	check_economy_idea = yes
	economy_military_spend_calc = yes

	### modifierヨリ [ x>=0, 丸める ]
	set_temp_variable = { economy_bad_index_modifier = modifier@SG_bad_economic_index_modifier }
	round_variable = economy_bad_index_modifier

	### 総合計算 (負)
	add_to_variable = { economy_bad_index_temp = economy_bad_index_military_spend }
	add_to_variable = { economy_bad_index_temp = economy_bad_index_modifier }
	set_variable = { economy_bad_index = economy_bad_index_temp }

	### DUEL!
	clear_variable = economy_index_temp
	set_variable = { economy_index_temp = 0 }

	set_variable = { economy_index_temp = economy_good_index }
	subtract_from_variable = { economy_index_temp = economy_bad_index }

	set_variable = { economy_index = economy_index_temp }
}

economy_military_spend_calc = {
	clear_variable = economy_bad_index_military_spend
	clear_variable = economy_bad_index_military_spend_temp

	### 師団数ヨリ [ 最大師団数 / 3 = -1 ]
	clear_variable = economy_bad_index_division
	set_temp_variable = { economy_bad_index_division_temp = num_armies }

	set_temp_variable = { division_rate = max_divisions }
	divide_temp_variable = { division_rate = 3 }

	divide_temp_variable = { economy_bad_index_division_temp = division_rate }
	round_temp_variable = economy_bad_index_division_temp
	#表示用
	set_variable = { economy_bad_index_division = economy_bad_index_division_temp }

	set_temp_variable = { economy_bad_index_military_spend_temp = economy_bad_index_division }

	###補正代入
	add_to_temp_variable = { economy_bad_index_military_spend_temp = modifier@SG_bad_army_spend_modifier }

	###くらんぷ
	clamp_temp_variable = {
		var = economy_bad_index_military_spend_temp
		min = 0
	}

	set_variable = { economy_bad_index_military_spend = economy_bad_index_military_spend_temp }
}

economy_deficit_width_calc = { #負債上限の設定
	clear_variable = economy_deficit_width_temp

	###経済レベル * 25
	set_temp_variable = { economy_deficit_width_temp = economy_level }
	multiply_temp_variable = { economy_deficit_width_temp = 25 }
		
	###基底値 + 100

	add_to_temp_variable = { economy_deficit_width_temp = 100 }

	set_variable = { economy_deficit_width = economy_deficit_width_temp }
}

economy_mod_calc = {
	#経済modifierの数値計算

	set_temp_variable = { ecomod_consumer_goods_temp = ecomod_consumer_goods_weight }
	set_temp_variable = { ecomod_production_factory_max_efficiency_temp = ecomod_production_factory_max_efficiency_weight }
	set_temp_variable = { ecomod_production_factory_start_efficiency_temp = ecomod_production_factory_start_efficiency_weight }
	set_temp_variable = { ecomod_production_speed_buildings_temp = ecomod_production_speed_buildings_weight }
	set_temp_variable = { ecomod_local_building_slots_factor_temp = ecomod_local_building_slots_factor_weight }
	set_temp_variable = { ecomod_local_resources_temp = ecomod_local_resources_weight }

	multiply_temp_variable = { ecomod_consumer_goods_temp = economy_level }
	multiply_temp_variable = { ecomod_production_factory_max_efficiency_temp = economy_level }
	multiply_temp_variable = { ecomod_production_factory_start_efficiency_temp = economy_level }
	multiply_temp_variable = { ecomod_production_speed_buildings_temp = economy_level }
	multiply_temp_variable = { ecomod_local_building_slots_factor_temp = economy_level }
	multiply_temp_variable = { ecomod_local_resources_temp = economy_level }

	set_variable = { ecomod_consumer_goods = ecomod_consumer_goods_temp }
	set_variable = { ecomod_production_factory_max_efficiency = ecomod_production_factory_max_efficiency_temp }
	set_variable = { ecomod_production_factory_start_efficiency = ecomod_production_factory_start_efficiency_temp }
	set_variable = { ecomod_production_speed_buildings = ecomod_production_speed_buildings_temp }
	set_variable = { ecomod_local_building_slots_factor = ecomod_local_building_slots_factor_temp }
	set_variable = { ecomod_local_resources = ecomod_local_resources_temp }
}

economy_progress_gui_setup = { #経済進捗GUI設定
	#経済バー
	clear_variable = economy_progress_gui
	clear_variable = economy_progress_gui_temp

	set_temp_variable = { economy_progress_gui_temp = global.economy_progress_unit }
	multiply_temp_variable = { economy_progress_gui_temp = economy_progress }

	if = {
		limit = { is_ai = no }
		log = "[This.GetTag]: economy_progress_gui_temp = [?economy_progress_gui_temp]"
	}

	add_to_temp_variable = { economy_progress_gui_temp = global.economy_progress_offset }

	round_variable = economy_progress_gui_temp
	set_variable = { economy_progress_gui = economy_progress_gui_temp }

	#負債バー
	clear_variable = deficit_gui
	clear_variable = deficit_gui_temp

	set_temp_variable = { deficit_gui_temp = economy_deficit_width }
	divide_temp_variable = { deficit_gui_temp = 320 } #単位算出

	multiply_temp_variable = { deficit_gui_temp = economy_deficit }

	round_variable = deficit_gui_temp
	set_variable = { deficit_gui = deficit_gui_temp }
}

economy_type_setup_decentral = { #分権型
	clr_country_flag = economy_type_mixture
	clr_country_flag = economy_type_central

	set_country_flag = economy_type_decentral

	set_variable = { ecomod_consumer_goods_weight = 0.001 }

	set_variable = { ecomod_production_factory_max_efficiency_weight = 0.02 }
	set_variable = { ecomod_production_factory_start_efficiency_weight = 0.02 }
	set_variable = { ecomod_production_speed_buildings_weight = 0.005 }

	set_variable = { ecomod_local_building_slots_factor_weight = 0.01 }
	set_variable = { ecomod_local_resources_weight = 0.01 }

	economy_mod_calc = yes
}
economy_type_setup_mixture = { #混合型
	clr_country_flag = economy_type_decentral
	clr_country_flag = economy_type_central

	set_country_flag = economy_type_mixture

	set_variable = { ecomod_consumer_goods_weight = -0.002 }

	set_variable = { ecomod_production_factory_max_efficiency_weight = 0.01 }
	set_variable = { ecomod_production_factory_start_efficiency_weight = 0.01 }
	set_variable = { ecomod_production_speed_buildings_weight = 0.008 }

	set_variable = { ecomod_local_building_slots_factor_weight = 0.01 }
	set_variable = { ecomod_local_resources_weight = 0.012 }

	economy_mod_calc = yes
}
economy_type_setup_central = { #集権型
	clr_country_flag = economy_type_mixture
	clr_country_flag = economy_type_decentral

	set_country_flag = economy_type_central

	set_variable = { ecomod_consumer_goods_weight = -0.005 }

	set_variable = { ecomod_production_factory_max_efficiency_weight = 0.005 }
	set_variable = { ecomod_production_factory_start_efficiency_weight = 0.005 }
	set_variable = { ecomod_production_speed_buildings_weight = 0.012 }

	set_variable = { ecomod_local_building_slots_factor_weight = 0.012 }
	set_variable = { ecomod_local_resources_weight = 0.015 }

	economy_mod_calc = yes
}

divisions_limit_calc = { #KRから引っ張ってきました…
	### 基本値 - 人口・工場数から算出
	clear_variable = non_core_base
	clear_variable = base_units
	set_temp_variable = { factory_points = 0 }

	set_variable = { base_states = 0 }
	###通常 - PREVの保有ステートを確認
	add_to_variable = { base_states = num_owned_states }
	every_owned_state = {
		if = {
			limit = { is_core_of = PREV }
			add_to_variable = { PREV.base_units = state_population_k }

			add_to_temp_variable = { factory_points = building_level@industrial_complex }
			add_to_temp_variable = { factory_points = building_level@arms_factory }
			add_to_temp_variable = { factory_points = building_level@dockyard }
		}
		else = {
			add_to_variable = { PREV.non_core_base = state_population_k }

			set_temp_variable = { state_factories_non_core = building_level@industrial_complex }
			add_to_temp_variable = { state_factories_non_core = building_level@arms_factory }
			add_to_temp_variable = { state_factories_non_core = building_level@dockyard }
			multiply_temp_variable = { state_factories_non_core = 0.02 }
			add_to_temp_variable = { factory_points = state_factories_non_core }
		}
	}

	### if in a civil war, count the other sides' states as well
	if = {
		limit = { has_civil_war = yes }
		every_enemy_country = {
			limit = { civilwar_target = PREV }
			every_owned_state = {
				if = {
					limit = { is_core_of = PREV.PREV }
					add_to_variable = { PREV.PREV.base_states = 1 }
					add_to_variable = { PREV.PREV.base_units = state_population_k }

					add_to_temp_variable = { factory_points = building_level@industrial_complex }
					add_to_temp_variable = { factory_points = building_level@arms_factory }
					add_to_temp_variable = { factory_points = building_level@dockyard }
				}
				else = {
					add_to_variable = { PREV.PREV.base_states = 0.02 }
					add_to_variable = { PREV.PREV.non_core_base = state_population_k }

					set_temp_variable = { state_factories_non_core = building_level@industrial_complex }
					add_to_temp_variable = { state_factories_non_core = building_level@arms_factory }
					add_to_temp_variable = { state_factories_non_core = building_level@dockyard }
					multiply_temp_variable = { state_factories_non_core = 0.02 }
					add_to_temp_variable = { factory_points = state_factories_non_core }
				}
			}
		}
	}

	### if an overlord, check if any puppets should transfer part of their bases
	clear_variable = subject_states
	clear_variable = subject_base_units
	clear_variable = subject_non_core_base
	if = {
		limit = { num_subjects > 0 }
		every_subject_country = {
			set_temp_variable = { states_temp = num_owned_states }
			add_to_variable = { PREV.subject_states = states_temp }

			set_temp_variable = { factories_temp = num_of_owned_factories }
			add_to_temp_variable = { factory_points = factories_temp }

			set_temp_variable = { base_units_temp = 0 }
			set_temp_variable = { non_core_base_temp = 0 }
			every_owned_state = {
				if = {
					limit = { is_core_of = PREV }
					add_to_temp_variable = { base_units_temp = state_population_k }

					add_to_temp_variable = { factory_points = building_level@industrial_complex }
					add_to_temp_variable = { factory_points = building_level@arms_factory }
					add_to_temp_variable = { factory_points = building_level@dockyard }
				}
				else = {
					add_to_temp_variable = { non_core_base_temp = state_population_k }

					set_temp_variable = { state_factories_non_core = building_level@industrial_complex }
					add_to_temp_variable = { state_factories_non_core = building_level@arms_factory }
					add_to_temp_variable = { state_factories_non_core = building_level@dockyard }
					multiply_temp_variable = { state_factories_non_core = 0.02 }
					add_to_temp_variable = { factory_points = state_factories_non_core }
				}
			}
			add_to_variable = { PREV.subject_base_units = base_units_temp }

			add_to_variable = { PREV.subject_non_core_base = non_core_base_temp }
		}
		
		add_to_variable = { base_states = subject_states }

		multiply_variable = { subject_base_units = 0.5 } #傀儡追加師団多すぎるので補正
		add_to_variable = { base_units = subject_base_units }
		divide_variable = { subject_base_units = 1000 } #for the tooltip

		# non-cores only give 2% of the population
		divide_variable = { subject_non_core_base = 50 }
		add_to_variable = { base_units = subject_non_core_base }
		divide_variable = { subject_non_core_base = 1000 } #for the tooltip
	}

	# non-cores only give 2% of the population
	divide_variable = { non_core_base = 50 }
	add_to_variable = { base_units = non_core_base }
	divide_variable = { non_core_base = 1000 } #for the tooltip

	# base unit count = population / 1000
	divide_variable = { base_units = 1000 }

	# calculate core population for the tooltip
	set_variable = { core_base = base_units }
	subtract_from_variable = { core_base = non_core_base }
	subtract_from_variable = { core_base = subject_base_units }
	subtract_from_variable = { core_base = subject_non_core_base }

	# add number of states to the base
	add_to_variable = { base_units = base_states }

	# calculate the modifier -- 1 + [ ( industry - population ) / ( industry + population ) ]
	set_variable = { divisor = factory_points }
	add_to_variable = { divisor = base_units }

	set_variable = { industry_factor = factory_points }
	subtract_from_variable = { industry_factor = base_units }
	divide_variable = { industry_factor = divisor }
	add_to_variable = { industry_factor = 1 }

	# minimum modifier -- x0.5
	set_variable = { industry_factor_uncapped = industry_factor }
	clamp_variable = { var = industry_factor min = 0.5 }

	set_variable = { max_divisions = base_units }
	multiply_variable = { max_divisions = industry_factor }

	# apply multipliers
	set_temp_variable = { limit_multiplier = 1 }
	# add_to_temp_variable = { limit_multiplier = modifier@unit_limit_factory_bonus } # +10% per economy law level above civilian economy
	if = {
		limit = { is_faction_leader = yes }
		add_to_temp_variable = { limit_multiplier = 0.10 } # +10% for faction leaders
	}
	multiply_variable = { max_divisions = limit_multiplier }

	# all countries get five free divisions
	add_to_variable = { max_divisions = 5 }

	# add any specific bonuses to the limit
	# add_to_variable = { max_divisions = modifier@unit_limit_bonus }

	round_variable = max_divisions
	if = {
		limit = { is_ai = no }
		log = "[This.GetTag] max_divisions:[?max_divisions]"
	}
}

check_economy_idea = {
	###陸軍の肥大化
	set_temp_variable = { max_divisions_twice = max_divisions }
	multiply_temp_variable = { max_divisions_twice = 2 }
	if = {
		limit = { check_variable = { max_divisions_twice < num_armies } }
		add_ideas = economy_bloated_army
	}
	else_if = {
		limit = { has_idea = economy_bloated_army }
		remove_ideas = economy_bloated_army
	}
}

unemployment_mod_calc = {
	#weight
	set_temp_variable = { empmod_consumer_goods_temp = 1.2 }
	set_temp_variable = { empmod_stability_factor_temp = -0.75 }

	set_temp_variable = { empmod_production_factory_max_efficiency_temp = -1.2 }
	set_temp_variable = { empmod_production_speed_buildings_temp = -1.5 }
	set_temp_variable = { empmod_industrial_capacity_factory_temp = -1.8 }
	set_temp_variable = { empmod_industrial_capacity_dockyard_temp = -1.8 }

	set_temp_variable = { empmod_local_resources_temp = -1.0 }
	set_temp_variable = { empmod_recruitable_population_factor_temp = -1.2 }

	#calc
	multiply_temp_variable = { empmod_consumer_goods_temp = unemployment_rate }
	multiply_temp_variable = { empmod_stability_factor_temp = unemployment_rate }

	multiply_temp_variable = { empmod_production_factory_max_efficiency_temp = unemployment_rate }
	multiply_temp_variable = { empmod_production_speed_buildings_temp = unemployment_rate }
	multiply_temp_variable = { empmod_industrial_capacity_factory_temp = unemployment_rate }
	multiply_temp_variable = { empmod_industrial_capacity_dockyard_temp = unemployment_rate }

	multiply_temp_variable = { empmod_local_resources_temp = unemployment_rate }
	multiply_temp_variable = { empmod_recruitable_population_factor_temp = unemployment_rate }

	#dainyu~
	set_variable = { empmod_consumer_goods = empmod_consumer_goods_temp }
	set_variable = { empmod_stability_factor = empmod_stability_factor_temp }

	set_variable = { empmod_production_factory_max_efficiency = empmod_production_factory_max_efficiency_temp }
	set_variable = { empmod_production_speed_buildings = empmod_production_speed_buildings_temp }
	set_variable = { empmod_industrial_capacity_factory = empmod_industrial_capacity_factory_temp }
	set_variable = { empmod_industrial_capacity_dockyard = empmod_industrial_capacity_dockyard_temp }

	set_variable = { empmod_local_resources = empmod_local_resources_temp }
	set_variable = { empmod_recruitable_population_factor = empmod_recruitable_population_factor_temp }

	###index case
	if = {
		limit = { check_variable = { unemployment_rate > 0.5 } }
		set_variable = { empmod_bad_economic_index = 10 }
	}
	else_if = {
		limit = { check_variable = { unemployment_rate > 0.25 } }
		set_variable = { empmod_bad_economic_index = 5 }
	}
	else_if = {
		limit = { check_variable = { unemployment_rate > 0.2 } }
		set_variable = { empmod_bad_economic_index = 4 }
	}
	else_if = {
		limit = { check_variable = { unemployment_rate > 0.15 } }
		set_variable = { empmod_bad_economic_index = 3 }
	}
	else_if = {
		limit = { check_variable = { unemployment_rate > 0.1 } }
		set_variable = { empmod_bad_economic_index = 2 }
	}
	else_if = {
		limit = { check_variable = { unemployment_rate > 0.05 } }
		set_variable = { empmod_bad_economic_index = 1 }
	}
	else = {
		set_variable = { empmod_bad_economic_index = 0 }
	}
}

###経済方策
# This effect is old economy_system

# economy_setup = {
# 	###値設定
	
# 	#消費財工場数
# 	set_variable = { THIS.ic_amount = THIS.num_of_civilian_factories }
# 	add_to_variable = { THIS.ic_amount = THIS.num_of_military_factories }

# 	log = "temp:[?THIS.consumer_goods_ic_temp] = [?THIS.num_of_factories]"
# 	set_variable = { THIS.consumer_goods_ic_temp = THIS.ic_amount }
# 	log = "temp:[?THIS.consumer_goods_ic_temp] * [?modifier@SG_consumer_goods_modifier]"
# 	multiply_variable = { THIS.consumer_goods_ic_temp = modifier@SG_consumer_goods_modifier }
# 	log = "temp:[?THIS.consumer_goods_ic_temp],consumer:[?THIS.consumer_goods_ic]"
# 	set_variable = { THIS.consumer_goods_ic = THIS.consumer_goods_ic_temp }

# 	#所得人口
# 	set_variable = { THIS.income_pop_temp = THIS.max_manpower_k }

# 	set_variable = { THIS.poverty_pop_temp = THIS.max_manpower_k } #貧困層
# 	multiply_variable = { THIS.poverty_pop_temp = THIS.poverty_rate }

# 	subtract_from_variable = { THIS.income_pop_temp = THIS.poverty_pop_temp }
# 	set_variable = { THIS.income_pop = THIS.income_pop_temp }
	
# 	#消費財
# 	set_variable = { THIS.consumer_goods_ratio = modifier@SG_consumer_goods_modifier }

# 	#歳入補正
# 	set_variable = { THIS.other_income = modifier@SG_other_income_modifier }

# 	#社会支出
# 	set_variable = { THIS.social_spending_ratio = modifier@SG_social_spending_modifier }

# 	#主力艦船数
# 	set_variable = { THIS.large_ship_amount = num_ships_with_type@carrier }
# 	add_to_temp_variable = { THIS.large_ship_amount = num_ships_with_type@battleship }
# 	add_to_temp_variable = { THIS.large_ship_amount = num_ships_with_type@battle_cruiser }
# 	add_to_temp_variable = { THIS.large_ship_amount = num_ships_with_type@heavy_cruiser }
# 	#護衛艦船数
# 	set_variable = { THIS.small_ship_amount = num_ships_with_type@light_cruiser }
# 	add_to_temp_variable = { THIS.small_ship_amount = num_ships_with_type@destroyer }
# 	add_to_temp_variable = { THIS.small_ship_amount = num_ships_with_type@submarine }

# 	#modifier補正
# 	set_variable = { THIS.consumer_goods_income_modifier = modifier@SG_consumer_goods_income_modifier }
# 	set_variable = { THIS.income_pop_income_modifier = modifier@SG_income_pop_income_modifier }
# 	set_variable = { THIS.army_spending_modifier = modifier@SG_army_spending_modifier }
# 	set_variable = { THIS.navy_spending_modifier = modifier@SG_navy_spending_modifier }

# 	add_to_variable = { THIS.consumer_goods_income_modifier = 1.0 }
# 	add_to_variable = { THIS.income_pop_income_modifier = 1.0 }
# 	add_to_variable = { THIS.army_spending_modifier = 1.0 }
# 	add_to_variable = { THIS.navy_spending_modifier = 1.0 }

# 	###収入
# 	#消費財工場 * 500
# 	set_variable = { THIS.consumer_goods_ic_calc = THIS.consumer_goods_ic }
# 	multiply_variable = { THIS.consumer_goods_ic_calc = 200 }
# 	#補正
# 	multiply_variable = { THIS.consumer_goods_ic_calc = THIS.consumer_goods_income_modifier }

# 	set_variable = { THIS.income_temp = THIS.consumer_goods_ic_calc }

# 	#所得人口 * 0.15
# 	set_variable = { THIS.income_pop_calc = THIS.income_pop }
# 	multiply_variable = { THIS.income_pop_calc = 0.15 }
# 	#補正
# 	multiply_variable = { THIS.income_pop_calc = THIS.income_pop_income_modifier }

# 	add_to_variable = { THIS.income_temp = THIS.income_pop_calc }

# 	#その他補正
# 	add_to_variable = { THIS.income_temp = THIS.other_income }

# 	#総計
# 	set_variable = { THIS.income = THIS.income_temp }
# 	log = "income:[?THIS.income]"

# 	###支出
# 	##社会支出 * 0.1
# 	set_variable = { THIS.social_spending_temp = THIS.max_manpower_k }
# 	multiply_variable = { THIS.social_spending_temp = THIS.social_spending_ratio }
# 	multiply_variable = { THIS.social_spending_temp = 0.1 }

# 	#総計
# 	set_variable = { THIS.spending = THIS.social_spending_temp }

# 	##陸軍
# 	#人件費 / 大隊数 * 8
# 	set_variable = { THIS.army_manpower_spending_temp = num_battalions }
# 	multiply_variable = { THIS.army_manpower_spending_temp = 8 }
# 	set_variable = { THIS.army_spending_temp = THIS.army_manpower_spending_temp }

# 	#軍需工場 * 50
# 	set_variable = { THIS.army_factory_spending_temp = THIS.num_of_military_factories }
# 	multiply_variable = { THIS.army_factory_spending_temp = 50 }
# 	add_to_variable = { THIS.army_spending_temp = THIS.army_factory_spending_temp }
# 	#補正
# 	multiply_variable = { THIS.army_spending_temp = THIS.army_spending_modifier }

# 	#総計
# 	add_to_variable = { THIS.spending = THIS.army_spending_temp }

# 	##海軍
# 	#艦船　大型艦 * 50, 小型艦 * 10
# 	set_variable = { THIS.navy_large_ship_temp = THIS.large_ship_amount }
# 	multiply_variable = { THIS.navy_large_ship_temp = 50 }

# 	set_variable = { THIS.navy_small_ship_temp = THIS.small_ship_amount }
# 	multiply_variable = { THIS.navy_small_ship_temp = 10 }
	
# 	set_variable = { THIS.navy_spending_temp = THIS.navy_large_ship_temp }
# 	add_to_variable = { THIS.navy_spending_temp = THIS.navy_small_ship_temp }

# 	#海軍造船所 * 30
# 	set_variable = { THIS.navy_factory_spending_temp = THIS.num_of_naval_factories }
# 	multiply_variable = { THIS.navy_factory_spending_temp = 30 }
# 	add_to_variable = { THIS.navy_spending_temp = THIS.navy_factory_spending_temp }
# 	#補正
# 	multiply_variable = { THIS.navy_spending_temp = THIS.navy_spending_modifier }

# 	#総計
# 	add_to_variable = { THIS.spending = THIS.navy_spending_temp }

# 	log = "spending:[?THIS.spending]"

# 	###国庫変動###
# 	set_variable = { THIS.fluctuation_temp = THIS.income }
# 	subtract_from_variable = { THIS.fluctuation_temp = THIS.spending }
# 	set_variable = { THIS.fluctuation = THIS.fluctuation_temp }
# 	log = "fluctuation:[?THIS.fluctuation]"

# 	###金準備上限
# 	set_variable = { THIS.revenue_limit_temp = THIS.ic_amount }
# 	multiply_variable = { THIS.revenue_limit_temp = 5000 }
# 	set_variable = { THIS.revenue_limit = THIS.revenue_limit_temp }
# 	#比率換算
# 	set_variable = { THIS.revenue_ratio_temp = THIS.treasury }
# 	divide_variable = { THIS.revenue_ratio_temp = THIS.revenue_limit }
# 	multiply_variable = { THIS.revenue_ratio_temp = 100 }
# 	set_variable = { THIS.revenue_ratio = THIS.revenue_ratio_temp }
# 	log = "revenue_ratio:[?FRA.revenue_ratio]"

# 	###債務上限
# 	#IC * 10000
# 	set_variable = { THIS.debt_ceiling_temp = THIS.ic_amount }
# 	multiply_variable = { THIS.debt_ceiling_temp = 7500 }
# 	set_variable = { THIS.debt_ceiling = THIS.debt_ceiling_temp }

# 	###円グラフ
# 	#消費財
# 	set_variable = { THIS.consumer_goods_ic_pie = THIS.consumer_goods_ic_calc }
# 	divide_variable = { THIS.consumer_goods_ic_pie = THIS.income }
# 	multiply_variable = { THIS.consumer_goods_ic_pie = 100 }
# 	#所得人口
# 	set_variable = { THIS.income_pop_pie = THIS.income_pop_calc }
# 	divide_variable = { THIS.income_pop_pie = THIS.income }
# 	multiply_variable = { THIS.income_pop_pie = 100 }

# 	add_to_variable = { THIS.income_pop_pie = THIS.consumer_goods_ic_pie }
# 	#その他歳入
# 	# set_variable = { THIS.other_income_pie = THIS.other_income }
# 	# divide_variable = { THIS.other_income_pie = THIS.income }
# 	# multiply_variable = { THIS.other_income_pie = 100 }
# 	set_variable = { THIS.other_income_pie = 100 }

# 	#社会支出
# 	set_variable = { THIS.social_spending_pie = THIS.social_spending_temp }
# 	divide_variable = { THIS.social_spending_pie = THIS.spending }
# 	multiply_variable = { THIS.social_spending_pie = 100 }
# 	#陸
# 	set_variable = { THIS.army_spending_pie = THIS.army_spending_temp }
# 	divide_variable = { THIS.army_spending_pie = THIS.spending }
# 	multiply_variable = { THIS.army_spending_pie = 100 }

# 	add_to_variable = { THIS.army_spending_pie = THIS.social_spending_pie }
# 	#海
# 	set_variable = { THIS.navy_spending_pie = 100 }
# 	# set_variable = { THIS.navy_spending_pie = THIS.navy_spending_temp }
# 	# divide_variable = { THIS.navy_spending_pie = THIS.spending }
# 	# multiply_variable = { THIS.navy_spending_pie = 100 }
# }